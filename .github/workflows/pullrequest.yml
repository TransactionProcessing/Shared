name: Build and Test Pull Requests

on:
  pull_request:
    branches:
    - master

jobs:
  buildlinux:
    name: "Build and Test Pull Requests - Linux"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    
    - name: Restore Nuget Packages
      run: dotnet restore Shared.sln --source ${{ secrets.PUBLICFEEDURL }} --source ${{ secrets.PRIVATEFEED_URL }}

    - name: Build Code
      run: dotnet build Shared.sln --configuration Release

    - name: Trust root certificate
      run: |
        sudo cp ./Shared.EventStoreContext.Tests/certs/ca/ca.crt /usr/local/share/ca-certificates/ca.crt
        sudo update-ca-certificates

    - name: Run Unit Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "Shared.Tests\Shared.Tests.csproj"

    - name: Run Event Store Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "Shared.EventStore.Tests\Shared.EventStore.Tests.csproj"
        dotnet test "Shared.EventStoreContext.Tests\Shared.EventStoreContext.Tests.csproj"

    - name: Run Integration Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "Shared.IntegrationTesting.Tests\Shared.IntegrationTesting.Tests.csproj"

    - uses: actions/upload-artifact@v4.4.3
      #if: ${{ failure() }}
      with:
        name: tracelogslinux
        path: /home/txnproc/trace/   

  buildwindows:
    name: "Build and Test Pull Requests - Windows"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1

    - name: Install NET 8
      uses: actions/setup-dotnet@v4.0.1
      with:
        dotnet-version: '8.0.x'

    - name: Build Windows SQL Server
      run: |
         cd SQLDocker
         docker build -t mssqlserver:2022-ltsc2022 --build-arg SQL_VERSION=2022 --build-arg WIN_VERSION=ltsc2022 .

    - name: Restore Nuget Packages
      run: dotnet restore Shared.sln --source ${{ secrets.PUBLICFEEDURL }} --source ${{ secrets.PRIVATEFEED_URL }}

    - name: Build Code
      run: dotnet build Shared.sln --configuration Release

    - name: Run Unit Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "Shared.Tests\Shared.Tests.csproj"

    - name: Run Event Store Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "Shared.EventStore.Tests\Shared.EventStore.Tests.csproj"
        dotnet test "Shared.EventStoreContext.Tests\Shared.EventStoreContext.Tests.csproj"

    - name: Run Integration Tests
      env:
          IsCI: true
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "Shared.IntegrationTesting.Tests\Shared.IntegrationTesting.Tests.csproj"

    - uses: actions/upload-artifact@v4.4.3
      #if: ${{ failure() }}
      with:
        name: tracelogswindows
        path: C:\\Users\\runneradmin\\txnproc

  buildmacos:
    name: "Build and Test Pull Requests - Mac"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v1

    - name: Install coreutils (includes timeout)
      run: brew install coreutils
    
    - name: Setup Docker with Colima
      run: |
        brew install docker --cask
        brew install colima
        gtimeout 180 colima start --cpu 2 --memory 4 --disk 60

    - name: Check Colima Status
      run: colima status

    - name: Print Colima Logs
      run: |
        cat /Users/runner/.colima/_lima/colima/ha.stderr.log
        cat /Users/runner/.colima/_lima/colima/ha.stdout.log

    # Verify Docker installation
    - name: Verify Docker Installation
      run: |
        docker --version
        docker ps

    - name: Restore Nuget Packages
      run: dotnet restore Shared.sln --source ${{ secrets.PUBLICFEEDURL }} --source ${{ secrets.PRIVATEFEED_URL }}

    - name: Build Code
      run: dotnet build Shared.sln --configuration Release
                 
    - name: Trust root certificate
      run: |
        sudo cp ./Shared.EventStoreContext.Tests/certs/ca/ca.crt /usr/local/share/ca-certificates/ca.crt        
        sudo security authorizationdb write com.apple.trust-settings.admin allow 
        sudo security add-trusted-cert -d -r trustRoot -k "/Library/Keychains/System.keychain" /usr/local/share/ca-certificates/ca.crt
        sudo security authorizationdb remove com.apple.trust-settings.admin
          
    - name: Run Unit Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "Shared.Tests\Shared.Tests.csproj"

    - name: Run Event Store Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "Shared.EventStore.Tests\Shared.EventStore.Tests.csproj"
        dotnet test "Shared.EventStoreContext.Tests\Shared.EventStoreContext.Tests.csproj"

    - name: Run Integration Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "Shared.IntegrationTesting.Tests\Shared.IntegrationTesting.Tests.csproj"

    - name: debug
      if: ${{ failure() }}
      run: docker container ls -a

    - uses: actions/upload-artifact@v4.4.3
      if: ${{ failure() }}
      with:
        name: tracelogsios
        path: /Users/runner/txnproc/trace/




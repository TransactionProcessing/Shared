name: Nightly Build


on:
  schedule:
  - cron: "20 23 * * *"
  repository_dispatch:

jobs:
  buildandunittests:
    name: "Nightly Build - Main"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Install NET 9
      uses: actions/setup-dotnet@v4.0.1
      with:
        dotnet-version: '9.0.x'

    - name: Restore Nuget Packages
      run: dotnet restore Shared.sln --source ${{ secrets.PUBLICFEEDURL }} --source ${{ secrets.PRIVATEFEED_URL }}

    - name: Build Code
      run: dotnet build Shared.sln --configuration Release

    - name: Run Main Unit Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "Shared.Tests\Shared.Tests.csproj"
        dotnet test "Shared.EventStore.Tests\Shared.EventStore.Tests.csproj"

  buildlinux:
    name: "Nightly Build - Linux"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Install NET 9
      uses: actions/setup-dotnet@v4.0.1
      with:
        dotnet-version: '9.0.x'

    - name: Restore Nuget Packages
      run: dotnet restore Shared.sln --source ${{ secrets.PUBLICFEEDURL }} --source ${{ secrets.PRIVATEFEED_URL }}

    - name: Build Code
      run: dotnet build Shared.sln --configuration Release

    - name: Trust root certificate
      run: |
        sudo cp ./Shared.EventStoreContext.Tests/certs/ca/ca.crt /usr/local/share/ca-certificates/ca.crt
        sudo update-ca-certificates

    - name: Run Event Store Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"        
        dotnet test "Shared.EventStoreContext.Tests\Shared.EventStoreContext.Tests.csproj"

    - name: Run Integration Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "Shared.IntegrationTesting.Tests\Shared.IntegrationTesting.Tests.csproj"

    - uses: actions/upload-artifact@v4.4.3
      if: ${{ failure() }}
      with:
        name: tracelogslinux
        path: /home/txnproc/trace/   

  buildwindows:
    name: "Nightly Build - Windows"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v1

    - name: Install NET 9
      uses: actions/setup-dotnet@v4.0.1
      with:
        dotnet-version: '9.0.x'

    - name: Build Windows SQL Server
      run: |
         cd SQLDocker
         docker build -t mssqlserver:2022-ltsc2022 --build-arg SQL_VERSION=2022 --build-arg WIN_VERSION=ltsc2022 .
         
    - name: Restore Nuget Packages
      run: dotnet restore Shared.sln --source ${{ secrets.PUBLICFEEDURL }} --source ${{ secrets.PRIVATEFEED_URL }}

    - name: Build Code
      run: dotnet build Shared.sln --configuration Release

    - name: Run Event Store Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "Shared.EventStoreContext.Tests\Shared.EventStoreContext.Tests.csproj"

    - name: Run Integration Tests
      env:
          IsCI: true    
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "Shared.IntegrationTesting.Tests\Shared.IntegrationTesting.Tests.csproj"

    - uses: actions/upload-artifact@v4.4.3
      if: ${{ failure() }}
      with:
        name: tracelogswindows
        path: C:\\Users\\runneradmin\\txnproc

  # buildmacos:
  #   name: "Nightly Build - Mac"
  #   env:
  #       ASPNETCORE_ENVIRONMENT: "Production"

  #   runs-on: macos-latest
    
  #   steps:
  #   - uses: actions/checkout@v1

  #   - name: Setup Docker
  #     run: |
  #       brew install docker --cask
  #       brew install colima
  #       #colima start
  #       colima start --cpu 2 --memory 8 --disk 100

  #   - name: Restore Nuget Packages
  #     run: dotnet restore Shared.sln --source ${{ secrets.PUBLICFEEDURL }} --source ${{ secrets.PRIVATEFEED_URL }}

  #   - name: Build Code
  #     run: dotnet build Shared.sln --configuration Release
          
  #   - name: Run Integration Tests
  #     run: |
  #       echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
  #       dotnet test "Shared.IntegrationTesting.Tests\Shared.IntegrationTesting.Tests.csproj"
        
  #   - name: Trust root certificate
  #     run: |
  #       sudo cp ./Shared.EventStoreContext.Tests/certs/ca/ca.crt /usr/local/share/ca-certificates/ca.crt        
  #       sudo security authorizationdb write com.apple.trust-settings.admin allow 
  #       sudo security add-trusted-cert -d -r trustRoot -k "/Library/Keychains/System.keychain" /usr/local/share/ca-certificates/ca.crt
  #       sudo security authorizationdb remove com.apple.trust-settings.admin
          
  #   - name: Run Event Store Tests
  #     run: |
  #       echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
  #       dotnet test "Shared.EventStoreContext.Tests\Shared.EventStoreContext.Tests.csproj"        

  #   - uses: actions/upload-artifact@v4.4.3
  #     if: ${{ failure() }}
  #     with:
  #       name: tracelogsios
  #       path: /Users/runner/txnproc/trace/

  codecoverage:
    name: "Nightly Build - Code Coverage"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Install NET 9
      uses: actions/setup-dotnet@v4.0.1
      with:
        dotnet-version: '9.0.x'
        
    - name: Restore Nuget Packages
      run: dotnet restore Shared.sln --source ${{ secrets.PUBLICFEEDURL }} --source ${{ secrets.PRIVATEFEED_URL }}

    - name: Build Code
      run: dotnet build Shared.sln --configuration Release

    - name: Run Unit Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "Shared.Tests\Shared.Tests.csproj" /p:CollectCoverage=true /p:Exclude="[xunit*]*" /p:ExcludeByAttribute="Obsolete" /p:ExcludeByAttribute="GeneratedCodeAttribute" /p:ExcludeByAttribute="CompilerGeneratedAttribute" /p:ExcludeByAttribute="ExcludeFromCodeCoverageAttribute" /p:CoverletOutput="../lcov1.info" /maxcpucount:1 /p:CoverletOutputFormat="lcov"
        dotnet test "Shared.EventStore.Tests\Shared.EventStore.Tests.csproj" /p:CollectCoverage=true /p:Exclude="[xunit*]*" /p:ExcludeByAttribute="Obsolete" /p:ExcludeByAttribute="GeneratedCodeAttribute" /p:ExcludeByAttribute="CompilerGeneratedAttribute" /p:ExcludeByAttribute="ExcludeFromCodeCoverageAttribute" /p:CoverletOutput="../lcov2.info" /maxcpucount:1 /p:CoverletOutputFormat="lcov"

    - name: Setup Node.js for use with actions
      uses: actions/setup-node@v1.4.4

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3  
      with:
        token: ${{ secrets.CODECOV_TOKEN }} 
        files: ./lcov1.info,./lcov2.info


name: Codacy Bootstrap Issues

on:
  workflow_dispatch:  # allows manual trigger

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch all outstanding Codacy issues
        run: |
          curl --request POST \
            --url https://app.codacy.com/api/v3/analysis/organizations/gh/TransactionProcessing/repositories/Shared/issues/search \
            --header "api-token: ${{ secrets.CODACY_API_TOKEN }}" \
            --header "content-type: application/json" \
            --data '{
            "levels": ["Error", "Warning"]
            }' \
          -o codacy_issues.json

          # Debug: see response
          cat codacy_issues.json

          # Filter only Medium+/Warning+ issues
          jq '[.data[] | select(.patternInfo.severityLevel=="Warning" or .patternInfo.severityLevel=="Error")]' codacy_issues.json > filtered_issues.json

      - name: Create GitHub issues for outstanding Codacy findings
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const issues = JSON.parse(fs.readFileSync('filtered_issues.json', 'utf8'));

            for (const issue of issues) {
              const key = `codacy-issue-${issue.issueId}`;

              // Check if a GitHub Issue already exists for this Codacy issue
              const search = await github.rest.search.issuesAndPullRequests({
                q: `repo:${context.repo.owner}/${context.repo.repo} "${key}" in:body`
              });

              if (search.data.total_count === 0) {
                const title = `[Codacy] ${issue.patternInfo.severityLevel} issue in ${issue.filePath}:${issue.lineNumber}`;
                const body = `
                  Codacy detected a **${issue.patternInfo.severityLevel}** issue.

                  - **Rule**: ${issue.patternInfo.id}
                  - **Message**: ${issue.message}
                  - **File**: \`${issue.filePath}\`
                  - **Line**: ${issue.lineNumber}
                  - **Severity**: ${issue.patternInfo.severityLevel}

                  See full details in [Codacy Report](https://app.codacy.com/gh/<org>/<repo>/issues)

                  Unique ID: \`${key}\`
                                  `;

                                  await github.rest.issues.create({
                                    owner: context.repo.owner,
                                    repo: context.repo.repo,
                                    title,
                                    body,
                                    labels: ["codacy"]
                                  });
                                }
                              }
